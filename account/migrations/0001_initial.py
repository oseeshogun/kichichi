# Generated by Django 2.0.6 on 2018-09-24 13:07

import account.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=250)),
                ('posttime', models.DateTimeField(auto_now_add=True)),
                ('comment_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-posttime'],
            },
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followings', models.ManyToManyField(blank=True, related_name='is_following_me', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification', models.TextField()),
                ('important', models.BooleanField(default=False)),
                ('send_time', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-send_time'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=250, null=True)),
                ('town', models.CharField(blank=True, max_length=200, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('profession', models.CharField(blank=True, max_length=250, null=True)),
                ('profil', models.ImageField(default='profiles/default/profil.png', upload_to=account.models.user_directory_path)),
                ('actived', models.BooleanField(default=False)),
                ('langue', models.CharField(default='fr', max_length=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('launched', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='Publication/%Y/%m/%d/')),
                ('text', models.CharField(blank=True, max_length=200, null=True)),
                ('likes_number', models.IntegerField(default=0)),
                ('re_post', models.IntegerField(default=0)),
                ('is_repost', models.BooleanField(default=False)),
                ('inappropriate', models.BooleanField(default=False)),
                ('inappropriate_clicks', models.IntegerField(default=0)),
                ('public', models.BooleanField(default=False)),
                ('for_followers', models.BooleanField(default=False)),
                ('inappropriate_clickers', models.ManyToManyField(blank=True, related_name='inappropriate_clikers', to=settings.AUTH_USER_MODEL)),
                ('likers', models.ManyToManyField(blank=True, related_name='likers_related', to=settings.AUTH_USER_MODEL)),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('re_poster', models.ManyToManyField(blank=True, related_name='re_poster_related', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-launched'],
            },
        ),
        migrations.CreateModel(
            name='User_groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('members', models.ManyToManyField(blank=True, related_name='group', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='publication',
            name='viewers_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.User_groups'),
        ),
        migrations.AddField(
            model_name='comments',
            name='publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.Publication'),
        ),
    ]
